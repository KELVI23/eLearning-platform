openapi: 3.0.3
info:
  title: eLearnHub API
  version: 1.0.0
  description: This is the OpenAPI documentation for eLearnHub, an advanced e-learning
    platform.
paths:
  /api/account/update/:
    put:
      operationId: account_update_update
      tags:
      - account
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/account/upload-profile-picture/:
    post:
      operationId: account_upload_profile_picture_create
      tags:
      - account
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/assignments/{assignment_id}/submissions/:
    post:
      operationId: assignments_submissions_create
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: integer
        required: true
      tags:
      - assignments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/courses/:
    get:
      operationId: courses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseList'
          description: ''
    post:
      operationId: courses_create
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{course_id}/enroll/:
    post:
      operationId: courses_enroll_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/courses/{course_id}/materials/:
    get:
      operationId: courses_materials_retrieve
      parameters:
      - in: path
        name: course_id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: courses_materials_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/courses/{course_id}/sections/:
    get:
      operationId: courses_sections_retrieve
      parameters:
      - in: path
        name: course_id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: courses_sections_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/courses/{course_id}/update/:
    post:
      operationId: courses_update_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/courses/{id}/:
    get:
      operationId: courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/courses/{id}/remove_student/:
    post:
      operationId: courses_remove_student_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/feedback/:
    get:
      operationId: feedback_list
      tags:
      - feedback
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feedback'
          description: ''
    post:
      operationId: feedback_create
      tags:
      - feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feedback'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
  /api/feedback/{id}/:
    get:
      operationId: feedback_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback.
        required: true
      tags:
      - feedback
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    put:
      operationId: feedback_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback.
        required: true
      tags:
      - feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feedback'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    patch:
      operationId: feedback_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback.
        required: true
      tags:
      - feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    delete:
      operationId: feedback_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback.
        required: true
      tags:
      - feedback
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/materials/:
    get:
      operationId: materials_list
      tags:
      - materials
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
    post:
      operationId: materials_create
      tags:
      - materials
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/materials/{material_id}/delete/:
    delete:
      operationId: materials_delete_destroy
      parameters:
      - in: path
        name: material_id
        schema:
          type: integer
        required: true
      tags:
      - materials
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/materials/{id}/:
    get:
      operationId: materials_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course material.
        required: true
      tags:
      - materials
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: materials_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course material.
        required: true
      tags:
      - materials
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: materials_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course material.
        required: true
      tags:
      - materials
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: materials_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course material.
        required: true
      tags:
      - materials
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications/:
    get:
      operationId: notifications_list
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
    post:
      operationId: notifications_create
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/{id}/:
    get:
      operationId: notifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    put:
      operationId: notifications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    patch:
      operationId: notifications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    delete:
      operationId: notifications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/profile/:
    get:
      operationId: profile_retrieve
      tags:
      - profile
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/sections/{section_id}/materials/:
    get:
      operationId: sections_materials_retrieve
      parameters:
      - in: path
        name: section_id
        schema:
          type: integer
        required: true
      tags:
      - sections
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: sections_materials_create
      parameters:
      - in: path
        name: section_id
        schema:
          type: integer
        required: true
      tags:
      - sections
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/sections/{section_id}/materials/view/:
    get:
      operationId: sections_materials_view_retrieve
      parameters:
      - in: path
        name: section_id
        schema:
          type: integer
        required: true
      tags:
      - sections
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/statuses/:
    get:
      operationId: statuses_list
      tags:
      - statuses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusUpdate'
          description: ''
    post:
      operationId: statuses_create
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUpdate'
          description: ''
  /api/statuses/{id}/:
    get:
      operationId: statuses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this status update.
        required: true
      tags:
      - statuses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUpdate'
          description: ''
    put:
      operationId: statuses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this status update.
        required: true
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUpdate'
          description: ''
    patch:
      operationId: statuses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this status update.
        required: true
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatusUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatusUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatusUpdate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUpdate'
          description: ''
    delete:
      operationId: statuses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this status update.
        required: true
      tags:
      - statuses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/search/:
    get:
      operationId: users_search_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        teacher:
          type: string
          readOnly: true
        students:
          type: array
          items:
            type: integer
        image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        difficulty_level:
          type: string
          maxLength: 50
      required:
      - description
      - id
      - students
      - teacher
      - title
    Feedback:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        course:
          type: integer
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: -2147483648
          maximum: 2147483647
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - comment
      - course
      - created_at
      - id
      - rating
      - student
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        message:
          type: string
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - message
      - user
    PaginatedCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    PatchedCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        teacher:
          type: string
          readOnly: true
        students:
          type: array
          items:
            type: integer
        image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        difficulty_level:
          type: string
          maxLength: 50
    PatchedFeedback:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        course:
          type: integer
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: -2147483648
          maximum: 2147483647
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedNotification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        message:
          type: string
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStatusUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
    RoleEnum:
      enum:
      - student
      - teacher
      type: string
      description: |-
        * `student` - Student
        * `teacher` - Teacher
    StatusUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - id
      - user
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        profile_picture:
          type: string
          readOnly: true
        enrolled_courses:
          type: string
          readOnly: true
      required:
      - enrolled_courses
      - id
      - profile_picture
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
